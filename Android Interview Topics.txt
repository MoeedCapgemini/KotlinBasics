sealed class
enum class values and valueOf
Polymorphism 

Composition( "has-a" relationship based)

Inheritance("is" a)-> 

Advantages:
1.Code Reusability: Inheritance allows subclasses to reuse the code from the parent class, 
  which can reduce duplication and keep your code DRY (Don't Repeat Yourself).

Disadvantage : 
1.Inheritance creates a strong coupling between parent and child classes. 
  Changes to the parent class can break subclasses, making the code more fragile

2.Less Flexibility: Once you define an inheritance structure, changing it is difficult.
  It's harder to modify relationships without affecting the entire hierarchy

3.Inheriting Unnecessary Behavior: Inheritance can force subclasses to inherit behavior they don't need,
  leading to bloated classes and complexity.

Hi team,
Barclays L1 interview question - 
 
Some Java question like  polymorphism, 
how to access abstract class and abstract function ,  same with final class and function.
default v/s protected -with example
with v/s apply - with example
 
Refied types - with example
two way data binding - with example
mediator v/s mutable live data
kotlin flows? -with example
state and shared  flows? - with example and use case
flow operators? - 
viewmodel and its internal working
how to launch a coroutine - 
launch v/s async?
runblocking?
suspend functions? and it internal working
supervisor scope? 
dependency injection? with it annotation example
@Inject, @Component? 
room database?
mockk? 
viewmodel >> isEmailValid() - Test case for emailvalid in viewmodel class
 
alert dialog unit test >> 
facade pattern , Builder des patrn , Factory dp